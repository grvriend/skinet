{"version":3,"sources":["webpack:///src/app/checkout/checkout-address/checkout-address.component.ts","webpack:///src/app/checkout/checkout-address/checkout-address.component.html","webpack:///src/app/checkout/checkout-delivery/checkout-delivery.component.ts","webpack:///src/app/checkout/checkout-delivery/checkout-delivery.component.html","webpack:///src/app/checkout/checkout-payment/checkout-payment.component.html","webpack:///src/app/checkout/checkout-payment/checkout-payment.component.ts","webpack:///src/app/checkout/checkout-review/checkout-review.component.ts","webpack:///src/app/checkout/checkout-review/checkout-review.component.html","webpack:///src/app/checkout/checkout-routing.module.ts","webpack:///src/app/checkout/checkout-success/checkout-success.component.ts","webpack:///src/app/checkout/checkout-success/checkout-success.component.html","webpack:///src/app/checkout/checkout.component.ts","webpack:///src/app/checkout/checkout.component.html","webpack:///src/app/checkout/checkout.module.ts","webpack:///src/app/checkout/checkout.service.ts"],"names":["CheckoutAddressComponent","accountService","toastr","updateUserAddress","checkoutForm","get","value","subscribe","address","success","reset","error","message","console","log","saveUserAddress","selector","templateUrl","styleUrls","id","CheckoutDeliveryComponent","checkoutService","basketService","getDeliveryMethods","dm","deliveryMethods","deliveryMethod","setShippingPrice","CheckoutPaymentComponent","router","cardHandler","onChange","bind","loading","cardNumberValid","cardExpiryValid","cardCvcValid","stripe","Stripe","elements","cardNumber","create","mount","cardNumberElement","nativeElement","addEventListener","cardExpiry","cardExpiryElement","cardCvc","cardCvcElement","destroy","event","cardErrors","elementType","complete","basket","getCurrentBasketValue","createOrder","createdOrder","confirmPaymentWIthStripe","paymentResult","paymentIntent","deleteBasket","navigationExtras","state","navigate","confirmCardPayment","clientSecret","payment_method","card","billing_details","name","orderToCreate","getOrderToCreate","toPromise","basketId","deliveryMethodId","shipToAddress","submitOrder","CheckoutReviewComponent","basket$","createPaymentIntent","response","appStepper","next","routes","path","component","CheckoutRoutingModule","forChild","declarations","imports","exports","CheckoutSuccessComponent","navigation","getCurrentNavigation","extras","order","CheckoutComponent","fb","createCheckoutForm","getAddressFormValues","getDeliveryMethodValue","basketTotals$","basketTotal$","group","addressForm","firstName","required","lastName","street","city","zipcode","deliveryForm","paymentForm","nameOnCard","getUserAddress","patchValue","toString","CheckoutModule","CheckoutService","http","baseUrl","apiUrl","post","pipe","sort","a","b","price","providedIn"],"mappings":"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","file":"checkout-checkout-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AccountService } from 'src/app/account/account.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IAddress } from 'src/app/shared/models/address';\r\n\r\n@Component({\r\n  selector: 'app-checkout-address',\r\n  templateUrl: './checkout-address.component.html',\r\n  styleUrls: ['./checkout-address.component.scss']\r\n})\r\nexport class CheckoutAddressComponent implements OnInit {\r\n  @Input() checkoutForm: FormGroup;\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  saveUserAddress() {\r\n    this.accountService.updateUserAddress(this.checkoutForm.get('addressForm').value).\r\n      subscribe((address: IAddress) => {\r\n        this.toastr.success('Address saved');\r\n        this.checkoutForm.get('addressForm').reset(address);\r\n      }, error => {\r\n          this.toastr.error(error.message);\r\n          console.log(error);\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"mt-4\" [formGroup]=\"checkoutForm\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h4>Shipping address</h4>\r\n        <button \r\n            (click)=\"saveUserAddress()\" \r\n            [disabled]=\"!checkoutForm.get('addressForm').valid || !checkoutForm.get('addressForm').dirty\"\r\n            class=\"btn btn-outline-success mb-3\">\r\n            Save as default address\r\n        </button>\r\n    </div>\r\n    <div class=\"row\" formGroupName=\"addressForm\">\r\n        <div class=\"form-group col-6\">\r\n            <app-text-input [label]=\"'First Name'\" formControlName=\"firstName\"></app-text-input>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <app-text-input [label]=\"'Last Name'\" formControlName=\"lastName\"></app-text-input>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <app-text-input [label]=\"'Street'\" formControlName=\"street\"></app-text-input>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <app-text-input [label]=\"'City'\" formControlName=\"city\"></app-text-input>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <app-text-input [label]=\"'State'\" formControlName=\"state\"></app-text-input>\r\n        </div>\r\n        <div class=\"form-group col-6\">\r\n            <app-text-input [label]=\"'Zip Code'\" formControlName=\"zipcode\"></app-text-input>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\">\r\n    <button class=\"btn btn-outline-primary\" routerLink=\"/basket\">\r\n        <i class=\"fa fa-angle-left\"></i> Back to Basket\r\n    </button>\r\n    <button [disabled]=\"checkoutForm.get('addressForm').invalid\" class=\"btn btn-primary\" cdkStepperNext>\r\n        Go to Delivery <i class=\"fa fa-angle-right\"></i>\r\n    </button>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CheckoutService } from '../checkout.service';\r\nimport { IDeliveryMethod } from 'src/app/shared/models/deliveryMethod';\r\nimport { BasketService } from 'src/app/basket/basket.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout-delivery',\r\n  templateUrl: './checkout-delivery.component.html',\r\n  styleUrls: ['./checkout-delivery.component.scss']\r\n})\r\nexport class CheckoutDeliveryComponent implements OnInit {\r\n  @Input() checkoutForm: FormGroup;\r\n  deliveryMethods: IDeliveryMethod[];\r\n\r\n  constructor(private checkoutService: CheckoutService, private basketService: BasketService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkoutService.getDeliveryMethods().subscribe((dm: IDeliveryMethod[]) => {\r\n      this.deliveryMethods = dm;\r\n    }, error => {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  setShippingPrice(deliveryMethod: IDeliveryMethod) {\r\n    this.basketService.setShippingPrice(deliveryMethod);\r\n  }\r\n\r\n}\r\n","<div class=\"mt-4\" [formGroup]=\"checkoutForm\">\r\n    <h4 class=\"mb-3\">Choose your delivery method</h4>\r\n    <div class=\"row ml-5\" formGroupName=\"deliveryForm\">\r\n        <div class=\"col-6 form-group\" *ngFor=\"let method of deliveryMethods\">\r\n            <input type=\"radio\"\r\n                id={{method.id}}\r\n                (click)=\"setShippingPrice(method)\"\r\n                value={{method.id}}\r\n                formControlName=\"deliveryMethod\"\r\n                class=\"custom-control-input\"\r\n            >\r\n            <label for=\"{{method.id}}\" class=\"custom-control-label\">\r\n                <strong>{{method.shortName}} - {{method.price | currency}}</strong>\r\n                <br>\r\n                <span class=\"label-description\">{{method.description}}</span>\r\n            </label>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\">\r\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\r\n        <i class=\"fa fa-angle-left\"></i> Back to Address\r\n    </button>\r\n    <button [disabled]=\"checkoutForm.get('deliveryForm').invalid\" class=\"btn btn-primary\" cdkStepperNext>\r\n        Go to Review <i class=\"fa fa-angle-right\"></i>\r\n    </button>\r\n</div>\r\n","<div class=\"mt-4\" [formGroup]=\"checkoutForm\">\r\n  <div class=\"row\">\r\n    <div class=\"form-group col-12\" formGroupName=\"paymentForm\">\r\n      <app-text-input\r\n        [label]=\"'Name on card'\"\r\n        formControlName=\"nameOnCard\"\r\n      ></app-text-input>\r\n    </div>\r\n    <div class=\"form-group col-6\">\r\n      <div #cardNumber class=\"form-control py-3\"></div>\r\n      <ng-container *ngIf=\"cardErrors\">\r\n        <span class=\"text-danger\">{{ cardErrors }}</span>\r\n      </ng-container>\r\n    </div>\r\n    <div class=\"form-group col-3\">\r\n      <div #cardExpiry class=\"form-control py-3\"></div>\r\n    </div>\r\n    <div class=\"form-group col-3\">\r\n      <div #cardCvc class=\"form-control py-3\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\"\r\n>\r\n  <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\r\n    <i class=\"fa fa-angle-left\"></i> Back to Review\r\n  </button>\r\n  <button\r\n    [disabled]=\"\r\n      loading ||\r\n      checkoutForm.get('paymentForm').invalid ||\r\n      !cardNumberValid ||\r\n      !cardExpiryValid ||\r\n      !cardCvcValid\r\n    \"\r\n    class=\"btn btn-primary\"\r\n    (click)=\"submitOrder()\"\r\n  >\r\n    Submit Order <i class=\"fa fa-angle-right\"></i>\r\n    <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n  </button>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BasketService } from 'src/app/basket/basket.service';\r\nimport { CheckoutService } from '../checkout.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { IBasket } from 'src/app/shared/models/basket';\r\nimport { IOrder } from 'src/app/shared/models/order';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n\r\ndeclare var Stripe;\r\n\r\n@Component({\r\n  selector: 'app-checkout-payment',\r\n  templateUrl: './checkout-payment.component.html',\r\n  styleUrls: ['./checkout-payment.component.scss'],\r\n})\r\nexport class CheckoutPaymentComponent implements AfterViewInit, OnDestroy {\r\n  @Input() checkoutForm: FormGroup;\r\n  @ViewChild('cardNumber', { static: true }) cardNumberElement: ElementRef;\r\n  @ViewChild('cardExpiry', { static: true }) cardExpiryElement: ElementRef;\r\n  @ViewChild('cardCvc', { static: true }) cardCvcElement: ElementRef;\r\n  stripe: any;\r\n  cardNumber: any;\r\n  cardExpiry: any;\r\n  cardCvc: any;\r\n  cardErrors: any;\r\n  cardHandler = this.onChange.bind(this);\r\n  loading = false;\r\n  cardNumberValid = false;\r\n  cardExpiryValid = false;\r\n  cardCvcValid = false;\r\n\r\n  constructor(\r\n    private basketService: BasketService,\r\n    private checkoutService: CheckoutService,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.stripe = Stripe('pk_test_RZxvA1EBdvbkiLxwvJ18qtmo00AwRN2awL');\r\n    const elements = this.stripe.elements();\r\n\r\n    this.cardNumber = elements.create('cardNumber');\r\n    this.cardNumber.mount(this.cardNumberElement.nativeElement);\r\n    this.cardNumber.addEventListener('change', this.cardHandler);\r\n\r\n    this.cardExpiry = elements.create('cardExpiry');\r\n    this.cardExpiry.mount(this.cardExpiryElement.nativeElement);\r\n    this.cardExpiry.addEventListener('change', this.cardHandler);\r\n\r\n    this.cardCvc = elements.create('cardCvc');\r\n    this.cardCvc.mount(this.cardCvcElement.nativeElement);\r\n    this.cardCvc.addEventListener('change', this.cardHandler);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.cardNumber.destroy();\r\n    this.cardExpiry.destroy();\r\n    this.cardCvc.destroy();\r\n  }\r\n\r\n  onChange(event) {\r\n    console.log(event);\r\n    if (event.error) {\r\n      this.cardErrors = event.error.message;\r\n    } else {\r\n      this.cardErrors = null;\r\n    }\r\n    switch (event.elementType) {\r\n      case 'cardNumber':\r\n        this.cardNumberValid = event.complete;\r\n        break;\r\n      case 'cardExpiry':\r\n        this.cardExpiryValid = event.complete;\r\n        break;\r\n      case 'cardCvc':\r\n        this.cardCvcValid = event.complete;\r\n        break;\r\n    }\r\n  }\r\n\r\n  async submitOrder() {\r\n    this.loading = true;\r\n    const basket = this.basketService.getCurrentBasketValue();\r\n    try {\r\n      const createdOrder = await this.createOrder(basket);\r\n      const paymentResult = await this.confirmPaymentWIthStripe(basket);\r\n\r\n      if (paymentResult.paymentIntent) {\r\n        this.basketService.deleteBasket(basket);\r\n        const navigationExtras: NavigationExtras = { state: createdOrder };\r\n        this.router.navigate(['checkout/success'], navigationExtras);\r\n      } else {\r\n        this.toastr.error(paymentResult.error.message);\r\n      }\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  private async confirmPaymentWIthStripe(basket) {\r\n    return this.stripe.confirmCardPayment(basket.clientSecret, {\r\n      payment_method: {\r\n        card: this.cardNumber,\r\n        billing_details: {\r\n          name: this.checkoutForm.get('paymentForm').get('nameOnCard').value,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  private async createOrder(basket: IBasket) {\r\n    const orderToCreate = this.getOrderToCreate(basket);\r\n    return this.checkoutService.createOrder(orderToCreate).toPromise();\r\n  }\r\n\r\n  private getOrderToCreate(basket: IBasket) {\r\n    return {\r\n      basketId: basket.id,\r\n      deliveryMethodId: +this.checkoutForm\r\n        .get('deliveryForm')\r\n        .get('deliveryMethod').value,\r\n      shipToAddress: this.checkoutForm.get('addressForm').value,\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IBasket } from 'src/app/shared/models/basket';\r\nimport { BasketService } from 'src/app/basket/basket.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CdkStepper } from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-checkout-review',\r\n  templateUrl: './checkout-review.component.html',\r\n  styleUrls: ['./checkout-review.component.scss']\r\n})\r\nexport class CheckoutReviewComponent implements OnInit {\r\n  @Input() appStepper: CdkStepper;\r\n  basket$: Observable<IBasket>;\r\n\r\n  constructor(private basketService: BasketService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.basket$ = this.basketService.basket$;\r\n  }\r\n\r\n  createPaymentIntent() {\r\n    return this.basketService.createPaymentIntent().subscribe((response: any) => {\r\n      this.appStepper.next();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n}\r\n","<div class=\"mt-4\">\r\n    <app-basket-summary \r\n        [isBasket]=false\r\n        [items]=\"(basket$ | async).items\"\r\n    >\r\n    </app-basket-summary>\r\n</div>\r\n\r\n<div class=\"float-none d-flex justify-content-between flex-column flex-lg-row mb-5\">\r\n    <button class=\"btn btn-outline-primary\" cdkStepperPrevious>\r\n        <i class=\"fa fa-angle-left\"></i> Back to Delivery\r\n    </button>\r\n    <button class=\"btn btn-primary\" (click)=\"createPaymentIntent()\">\r\n        Go to Payment <i class=\"fa fa-angle-right\"></i> \r\n    </button>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CheckoutComponent },\r\n  { path: 'success', component: CheckoutSuccessComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class CheckoutRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IOrder } from 'src/app/shared/models/order';\r\n\r\n@Component({\r\n  selector: 'app-checkout-success',\r\n  templateUrl: './checkout-success.component.html',\r\n  styleUrls: ['./checkout-success.component.scss']\r\n})\r\nexport class CheckoutSuccessComponent implements OnInit {\r\n  order: IOrder;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    const state = navigation && navigation.extras && navigation.extras.state;\r\n    if (state) {\r\n      this.order = state as IOrder;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div><i class=\"fa fa-check-circle fa-5x\" style=\"color: green\"></i></div>\r\n    <h2>Thank you.  Your order is confirmed</h2>\r\n    <p class=\"mb-4\">Your order has not shipped yet, but this is to be expected as we are not a real store!</p>\r\n    <button *ngIf=\"order\" routerLink=\"/orders/{{order?.id}}\" class=\"btn btn-outline-success\">View your order</button>\r\n    <button *ngIf=\"!order\" routerLink=\"/orders\" class=\"btn btn-outline-success\">View your orders</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AccountService } from '../account/account.service';\r\nimport { BasketService } from '../basket/basket.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IBasketTotals } from '../shared/models/basket';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.scss'],\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  basketTotals$: Observable<IBasketTotals>;\r\n  checkoutForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private basketService: BasketService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.createCheckoutForm();\r\n    this.getAddressFormValues();\r\n    this.getDeliveryMethodValue();\r\n    this.basketTotals$ = this.basketService.basketTotal$;\r\n  }\r\n\r\n  createCheckoutForm() {\r\n    this.checkoutForm = this.fb.group({\r\n      addressForm: this.fb.group({\r\n        firstName: [null, Validators.required],\r\n        lastName: [null, Validators.required],\r\n        street: [null, Validators.required],\r\n        city: [null, Validators.required],\r\n        state: [null, Validators.required],\r\n        zipcode: [null, Validators.required],\r\n      }),\r\n      deliveryForm: this.fb.group({\r\n        deliveryMethod: [null, Validators.required],\r\n      }),\r\n      paymentForm: this.fb.group({\r\n        nameOnCard: [null, Validators.required],\r\n      }),\r\n    });\r\n  }\r\n\r\n  getAddressFormValues() {\r\n    this.accountService.getUserAddress().subscribe(\r\n      (address) => {\r\n        if (address) {\r\n          this.checkoutForm.get('addressForm').patchValue(address);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getDeliveryMethodValue() {\r\n    const basket = this.basketService.getCurrentBasketValue();\r\n    if (basket.deliveryMethodId !== null) {\r\n      this.checkoutForm.get('deliveryForm').get('deliveryMethod').patchValue(basket.deliveryMethodId.toString());\r\n    }\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <app-stepper [linearModeSelected]=\"true\" #appStepper>\r\n                <cdk-step [label]=\"'Address'\" [completed]=\"(checkoutForm.get('addressForm')).valid\">\r\n                    <app-checkout-address [checkoutForm]=\"checkoutForm\"></app-checkout-address>\r\n                </cdk-step>\r\n                <cdk-step [label]=\"'Delivery'\" \r\n                    [completed]=\"(checkoutForm.get('deliveryForm')).valid\">\r\n                <app-checkout-delivery [checkoutForm]=\"checkoutForm\"></app-checkout-delivery>\r\n                </cdk-step>\r\n                <cdk-step [label]=\"'Review'\">\r\n                    <app-checkout-review [appStepper]=\"appStepper\"></app-checkout-review>\r\n                </cdk-step>\r\n                <cdk-step [label]=\"'Payment'\">\r\n                    <app-checkout-payment [checkoutForm]=\"checkoutForm\"></app-checkout-payment>\r\n                </cdk-step>\r\n            </app-stepper>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <app-order-totals\r\n                *ngIf=\"(basketTotals$ | async)\"\r\n                [shippingPrice]=\"(basketTotals$ | async).shipping\"\r\n                [subtotal]=\"(basketTotals$ | async).subtotal\"\r\n                [total]=\"(basketTotals$ | async).total\"\r\n            ></app-order-totals\r\n                >\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { CheckoutRoutingModule } from './checkout-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CheckoutAddressComponent } from './checkout-address/checkout-address.component';\r\nimport { CheckoutDeliveryComponent } from './checkout-delivery/checkout-delivery.component';\r\nimport { CheckoutReviewComponent } from './checkout-review/checkout-review.component';\r\nimport { CheckoutPaymentComponent } from './checkout-payment/checkout-payment.component';\r\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CheckoutComponent, CheckoutAddressComponent, CheckoutDeliveryComponent, CheckoutReviewComponent, CheckoutPaymentComponent, CheckoutSuccessComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CheckoutRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class CheckoutModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { IDeliveryMethod } from '../shared/models/deliveryMethod';\r\nimport { IOrderToCreate } from '../shared/models/order';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CheckoutService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createOrder(order: IOrderToCreate) {\r\n    return this.http.post(this.baseUrl + 'orders', order);\r\n  }\r\n\r\n  getDeliveryMethods() {\r\n    return this.http.get(this.baseUrl + 'orders/deliveryMethods').pipe(\r\n      map((dm: IDeliveryMethod[]) => {\r\n        return dm.sort((a, b) => b.price - a.price);\r\n      })\r\n    );\r\n  }\r\n}\r\n"]}